

# {$plugin.tx_news.settings.detailPid}

# [page["uid"] == 3701]
# [page["uid"] == 11006]
# @todo: Warum ist das überhaupt eingeschränkt?
[isSearch('form')]

plugin.tx_solr {

    view {
        templateRootPaths {
            20 = EXT:rkw_events/Resources/Private/Templates/Solr/Templates/
        }
        partialRootPaths {
            20 = EXT:rkw_events/Resources/Private/Partials/Solr/Partials/
        }
        layoutRootPaths {
            20 = EXT:rkw_events/Resources/Private/Layouts/Solr/Layouts/
        }
    }

    search {

        # ATM we do not provide some sorting
        sorting = 0
        sorting {
            options >
        }

        query {

            // @toDo: add filter data to get only current and upcoming events? query.filter
            # https://stackoverflow.com/questions/12977389/how-to-filter-query-in-solr-by-date
            # Alternative (umständlicher): https://stichwort.org/typo3/extension/solr-in-typo3-alte-datensaetze-ausschliessen/
            filter {
                specificType = type:tx_rkwevents_domain_model_event
                #specificTitle = title:Test
                // test with explicit dates always in solr format like "startDate_dateS:[2023-01-01T14:52:00Z TO 2023-12-30T14:52:00Z]"
                #startDateRange = startDate_dateS:[NOW/DAY TO *]
                dateFilter = endDate_dateS: [NOW/DAY TO *] OR isAnnouncement_intS: 1
            }

            # announcements to the end; all scheduled records ascending by start date
            sortBy = recordType_stringS desc, startDate_dateS asc
        }

        faceting {

            showEmptyFacets = 1
            #keepAllFacetsOnSelection = 1

            facets {

                # do not show "Content Type" tx_rkwevents_domain_model_event-Option. We only want to show exactly that one type in this list
                type >

                # documentType select
                documentType {
                    label = Veranstaltungsart
                    field = documentType_stringM
                    showEvenWhenEmpty = 1
                    # test
                    keepAllOptionsOnSelection = 1
                    partialName = SelectInfo
                    infoLabel = Infolabel
                    infoUid = 5429
                }

                # category select
                category {
                    label = Kategorie
                    field = category_stringM
                    showEvenWhenEmpty = 1
                    # test
                    keepAllOptionsOnSelection = 1
                    partialName = Select
                }

                # startDate in upcoming month(s)
                month {
                    label = Monat
                    field = startDate_dateS
                    type = queryGroup
                    queryGroup {
                        0.query = [NOW/MONTH TO NOW/MONTH+1MONTHS]
                        1.query = [NOW/MONTH+1MONTHS TO NOW/MONTH+2MONTHS]
                        2.query = [NOW/MONTH+2MONTHS TO NOW/MONTH+3MONTHS]
                        3.query = [NOW/MONTH+3MONTHS TO NOW/MONTH+4MONTHS]
                        4.query = [NOW/MONTH+4MONTHS TO NOW/MONTH+5MONTHS]
                        5.query = [NOW/MONTH+5MONTHS TO NOW/MONTH+6MONTHS]
                        6.query = [NOW/MONTH+6MONTHS TO NOW/MONTH+7MONTHS]
                        7.query = [NOW/MONTH+7MONTHS TO NOW/MONTH+8MONTHS]
                        8.query = [NOW/MONTH+8MONTHS TO NOW/MONTH+9MONTHS]
                        9.query = [NOW/MONTH+9MONTHS TO NOW/MONTH+10MONTHS]
                        10.query = [NOW/MONTH+10MONTHS TO NOW/MONTH+11MONTHS]
                        11.query = [NOW/MONTH+11MONTHS TO NOW/MONTH+12MONTHS]
                    }
                    renderingInstruction = CASE
                    renderingInstruction {
                        key.field = optionValue

                        default = TEXT
                        default.field = optionValue

                        0 = TEXT
                        0.value.postUserFunc = FSL\Searchmaster\UserFunctions\SolrFacets->getMonthName
                        1 = TEXT
                        1.value.postUserFunc = FSL\Searchmaster\UserFunctions\SolrFacets->getMonthName
                        2 = TEXT
                        2.value.postUserFunc = FSL\Searchmaster\UserFunctions\SolrFacets->getMonthName
                        3 = TEXT
                        3.value.postUserFunc = FSL\Searchmaster\UserFunctions\SolrFacets->getMonthName
                        4 = TEXT
                        4.value.postUserFunc = FSL\Searchmaster\UserFunctions\SolrFacets->getMonthName
                        5 = TEXT
                        5.value.postUserFunc = FSL\Searchmaster\UserFunctions\SolrFacets->getMonthName
                        6 = TEXT
                        6.value.postUserFunc = FSL\Searchmaster\UserFunctions\SolrFacets->getMonthName
                        7 = TEXT
                        7.value.postUserFunc = FSL\Searchmaster\UserFunctions\SolrFacets->getMonthName
                        8 = TEXT
                        8.value.postUserFunc = FSL\Searchmaster\UserFunctions\SolrFacets->getMonthName
                        9 = TEXT
                        9.value.postUserFunc = FSL\Searchmaster\UserFunctions\SolrFacets->getMonthName
                        10 = TEXT
                        10.value.postUserFunc = FSL\Searchmaster\UserFunctions\SolrFacets->getMonthName
                        11 = TEXT
                        11.value.postUserFunc = FSL\Searchmaster\UserFunctions\SolrFacets->getMonthName
                    }
                    showEvenWhenEmpty = 1
                    # test
                    keepAllOptionsOnSelection = 1
                    partialName = Select
                }

                # free of charge event yes / no
                freeOfCharge {
                    label = Kostenlos
                    field = freeOfCharge_intS

                    # exclude 0. So only value 1 (=is freeOfCharge) can used as facet
                    excludeValues = 0
                    showEvenWhenEmpty = 1
                    type = bool
                    partialName = Checkbox
                }

                # eligible event yes / no
                eligibility {
                    label = Förderfähig
                    field = eligibility_intS

                    # exclude 0. So only value 1 (=is eligible) can used as facet
                    excludeValues = 0
                    showEvenWhenEmpty = 1
                    type = bool
                    partialName = Checkbox
                }

            }
        }
    }
}
[end]


plugin.tx_solr {

    # logger
    logging.indexing.queue.rkw_events = 1

    # queue
    index {

        fieldProcessingInstructions {
            start = timestampToIsoDate
            end = timestampToIsoDate
        }

        queue {
            rkw_events = 1
            rkw_events {

                # re-index on title change
                // @toDo: https://solr.apache.org/guide/8_0/reindexing.html


                #recursiveUpdateFields = title, start, end

                // @toDo: Checken, ob "additionalPageIds" mit "storagePid" ausreicht!

                // @toDo: exclude old records
                // additionalWhereClause = (end >= ' . time() . ' OR start = 0)

                // @toDo: Maybe try to write an own indexer with additional enable-Fields als option?

                // @toDo: Write own "GarbageCollector"?
                // Hmmm: https://www.typo3-solr.com/solr-for-typo3/development-model/indexing/index-maintenance/


                // @toDo NUR ZUM TESTEN!!
               # additionalWhereClause = title LIKE '%test%'


                additionalPageIds = {$plugin.tx_rkwevents.persistence.storagePid}
                table = tx_rkwevents_domain_model_event

                fields {

                    # content
                    abstract = subtitle
                    description = description
                    title = title
                    tstamp = tstamp

                    // the special SOLR_CONTENT content object cleans HTML and RTE fields
                    content = SOLR_CONTENT
                    content {
                        cObject = COA
                        cObject {
                            10 = TEXT
                            10 {
                                field = description
                                noTrimWrap = || |
                            }
                        }
                    }

                    onlineEvent_intS = TEXT
                    onlineEvent_intS {
                        field = online_event
                    }

                    costsReg_stringS = TEXT
                    costsReg_stringS {
                        field = costs_reg
                    }

                    freeOfCharge_intS = TEXT
                    freeOfCharge_intS {
                        value = 1
                        if.value.field = costs_reg
                        if.equals = 0.00
                    }

                    eligibility_intS = TEXT
                    eligibility_intS {
                        field = eligibility
                    }

                    additionalTileFlag_stringS = TEXT
                    additionalTileFlag_stringS {
                        field = additional_tile_flag
                    }

                    recordType_stringS = TEXT
                    recordType_stringS {
                        field = record_type
                    }

                    isAnnouncement_intS = TEXT
                    isAnnouncement_intS {
                        value = 1
                        if.value.field = record_type
                        if.equals = \RKW\RkwEvents\Domain\Model\EventAnnouncement
                    }

                    content_target_group = SOLR_CONTENT
                    content_target_group {
                        cObject = COA
                        cObject {
                            10 = TEXT
                            10 {
                                field = target_group
                                noTrimWrap = || |
                            }
                        }
                    }

                    content_partner = SOLR_CONTENT
                    content_partner {
                        cObject = COA
                        cObject {
                            10 = TEXT
                            10 {
                                field = partner
                                noTrimWrap = || |
                            }
                        }
                    }

                    # @toDo: Bessere Datumsberechnung? -> fieldProcessingInstructions (https://docs.typo3.org/p/apache-solr-for-typo3/solr/11.5/en-us/Configuration/Reference/TxSolrIndex.html#fieldprocessinginstructions)

                    # dynamic fields (start and end date)
                    startDate_dateS = TEXT
                    startDate_dateS {
                        field = start
                        date = Y-m-d\TH:i:s\Z
                        /*
                        cObject = COA
                        cObject {
                            5 = TEXT
                            5.field = start
                            5.strftime = %d.%m.%Y
                        }
                        */
                    }

                    endDate_dateS = TEXT
                    endDate_dateS {
                        field = end
                        date = Y-m-d\TH:i:s\Z
                    }


                    /*
                     Vielleicht hilft das Beispiel, wenn alles Richtung EventSeries ausgelagert wird ("ingredients.ingredient.title"):
                    https://github.com/TYPO3-Solr/ext-solr/issues/2743
                    content = SOLR_CONTENT
                    content {
                    cObject = COA
                    cObject {`
                    120 = SOLR_RELATION
                    120 {
                    localField = recipe
                    foreignLabelField = ingredients.ingredient.title
                    }
                    }
                    */

                    department_stringM = SOLR_RELATION
                    department_stringM {
                        localField = department
                        multiValue = 0
                    }

                    documentType_stringM = SOLR_RELATION
                    documentType_stringM {
                        localField = document_type
                        multiValue = 0
                    }

                    placeCity_stringM = SOLR_RELATION
                    placeCity_stringM {
                        localField = place
                        foreignLabelField = city
                        multiValue = 0
                    }

                    category_stringM = SOLR_RELATION
                    category_stringM {
                        localField = categories
                        multiValue = 1
                    }

                    # the field "category_displayed" is not a real relation. Is simply a category uid select in TCA; and in FE converted by model typecast
                    categoriesDisplayed_stringS = TEXT
                    categoriesDisplayed_stringS {
                        cObject = COA
                        cObject {
                            15 = USER
                            15 {
                                userFunc = FSL\Searchmaster\UserFunctions\SolrIndexer->getCategoryDisplayed
                            }
                        }
                    }

                    # url
                    url = TEXT
                    url {
                        typolink {
                            parameter = {$plugin.tx_rkwevents.settings.showPid}
                            additionalParams = &tx_rkwevents_pi1[controller]=Event&tx_rkwevents_pi1[action]=show&tx_rkwevents_pi1[event]={field:uid}
                            additionalParams.insertData = 1
                            useCacheHash = 1
                            returnLast = url
                        }
                    }
                }
            }
        }
    }
}

